<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>revolution</artifactId>
		<groupId>org.autumn</groupId>
		<version>1.0-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<artifactId>revolution-web</artifactId>
	<packaging>war</packaging>
	<description>常用的web开发模式示例.包括activeMq,rabbitMq,redis,zookeeper等使用(一步步来)</description>

	<dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- spring start -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-websocket</artifactId>
		</dependency>
		<!-- spring end -->
		<!-- mybatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
		</dependency>

		<!-- json -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<!-- test start -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmockit</groupId>
			<artifactId>jmockit</artifactId>
		</dependency>

		<!-- test end -->

		<!-- h2 -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>



		<!-- LOG start -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
		</dependency>
		<!-- LOG end -->


		<!-- http client test -->
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>

		<!-- http end -->




		<!-- java socket -->

	</dependencies>

	<build>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>

			<!-- 输出当前项目的版本号-start -->
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<targetPath>${basedir}/target/${project.artifactId}-${project.version}</targetPath>
				<excludes>
					<exclude>*/*</exclude>
					<exclude>*.xml</exclude>
					<exclude>*.properties</exclude>
				</excludes>
			</resource>
			<!-- 输出当前项目的版本号-end -->
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/java</directory>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<configuration>
					<connectors>
						<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
							<port>9011</port>
							<maxIdleTime>60000</maxIdleTime>
						</connector>
					</connectors>
					<reload>automatic</reload>
					<scanIntervalSeconds>0</scanIntervalSeconds>
					<systemProperties>
						<systemProperty>
							<name>org.mortbay.util.URI.charset</name>
							<value>UTF-8</value>
						</systemProperty>
					</systemProperties>
					<jvmArgs>-Xmx512m -XX:PermSize=128m -XX:MaxPermSize=256m
						-Dfile.encoding=UTF-8
					</jvmArgs>
				</configuration>
			</plugin>

			<!-- 启动h2的控制台 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.h2database</groupId>
						<artifactId>h2</artifactId>
						<version>1.4.178</version>
					</dependency>
				</dependencies>
				<configuration>
					<mainClass>org.h2.tools.Server</mainClass>
					<includePluginDependencies>true</includePluginDependencies>
					<arguments>
						<argument>-web</argument>
						<argument>-webPort</argument>
						<argument>8090</argument>
						<argument>-browser</argument>
					</arguments>
				</configuration>
			</plugin>

			<!-- liquibase插件 -->
			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<version>3.0.5</version>
				<configuration>
					<changeLogFile>src/main/resources/liquibase/revolution-changelog.xml</changeLogFile>
					<!-- <outputChangeLogFile>src/test/resources/liquibase/h2-changelog.xml</outputChangeLogFile> 
						<migrationSqlOutputFile>src/test/resources/liquibase/octopus-sql.xml</migrationSqlOutputFile> -->

					<driver>org.h2.Driver</driver>
					<url>jdbc:h2:file:./target/h2/octopus</url>
					<username>sa</username>
					<password>sa</password>
				</configuration>
				<executions>
					<execution>
						<phase>process-resources</phase>
						<goals>
							<!-- <goal>generateChangeLog</goal> <goal>updateSQL</goal> -->
							<!--<goal>update</goal> -->
							<goal>update</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>


</project>